{"version":3,"file":"static/js/775.2264efa7.chunk.js","mappings":"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","sources":["Pages/Contacts/Contacts.jsx","../node_modules/@chakra-ui/card/dist/chunk-4DHADF5X.mjs","../node_modules/@chakra-ui/card/dist/chunk-S432VF2S.mjs","../node_modules/@chakra-ui/layout/dist/chunk-AMDSPU3E.mjs","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/dist/chunk-V4DIVZKN.mjs","../node_modules/@chakra-ui/layout/dist/chunk-O5CRURSQ.mjs","../node_modules/@chakra-ui/react-children-utils/dist/index.mjs","../node_modules/@chakra-ui/card/dist/chunk-KKEJMMX3.mjs","../node_modules/@chakra-ui/layout/dist/chunk-B2MGPQRJ.mjs","../node_modules/@chakra-ui/card/dist/chunk-V3HPETQ4.mjs","Pages/Contacts/ContactsList/ContactsList.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { resetContactInfo } from 'redux/contactsSlice';\nimport styled from 'styled-components';\nconst { ContactsList } = require('./ContactsList/ContactsList');\n\nconst Main = styled.main`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\nposition: relative\n}`;\nconst Contacts = () => {\n\n\n  return (\n    <Main>\n      <ContactsList />\n    </Main>\n  );\n};\n\nexport default Contacts;\n","// src/card-context.tsx\nimport { createStylesContext } from \"@chakra-ui/system\";\nvar [CardStylesProvider, useCardStyles] = createStylesContext(\"Card\");\n\nexport {\n  CardStylesProvider,\n  useCardStyles\n};\n","import {\n  CardStylesProvider\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Card = forwardRef(function Card2(props, ref) {\n  const {\n    className,\n    children,\n    direction = \"column\",\n    justify,\n    align,\n    ...rest\n  } = omitThemingProps(props);\n  const styles = useMultiStyleConfig(\"Card\", props);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card\", className),\n      __css: {\n        display: \"flex\",\n        flexDirection: direction,\n        justifyContent: justify,\n        alignItems: align,\n        position: \"relative\",\n        minWidth: 0,\n        wordWrap: \"break-word\",\n        ...styles.container\n      },\n      ...rest,\n      children: /* @__PURE__ */ jsx(CardStylesProvider, { value: styles, children })\n    }\n  );\n});\n\nexport {\n  Card\n};\n","// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nvar selector = \"& > *:not(style) ~ *:not(style)\";\nfunction getStackStyles(options) {\n  const { spacing, direction } = options;\n  const directionStyles = {\n    column: {\n      marginTop: spacing,\n      marginEnd: 0,\n      marginBottom: 0,\n      marginStart: 0\n    },\n    row: { marginTop: 0, marginEnd: 0, marginBottom: 0, marginStart: spacing },\n    \"column-reverse\": {\n      marginTop: 0,\n      marginEnd: 0,\n      marginBottom: spacing,\n      marginStart: 0\n    },\n    \"row-reverse\": {\n      marginTop: 0,\n      marginEnd: spacing,\n      marginBottom: 0,\n      marginStart: 0\n    }\n  };\n  return {\n    flexDirection: direction,\n    [selector]: mapResponsive(\n      direction,\n      (value) => directionStyles[value]\n    )\n  };\n}\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  selector,\n  getStackStyles,\n  getDividerStyles\n};\n","import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles,\n  getStackStyles,\n  selector\n} from \"./chunk-V4DIVZKN.mjs\";\n\n// src/stack/stack.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const styles = useMemo(\n    () => getStackStyles({ direction, spacing }),\n    [direction, spacing]\n  );\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: styles.flexDirection,\n      flexWrap: wrap,\n      className: _className,\n      __css: hasDivider ? {} : { [selector]: styles[selector] },\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-body.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { forwardRef, chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardBody = forwardRef(function CardBody2(props, ref) {\n  const { className, ...rest } = props;\n  const styles = useCardStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      className: cx(\"chakra-card__body\", className),\n      __css: styles.body,\n      ...rest\n    }\n  );\n});\n\nexport {\n  CardBody\n};\n","// src/heading.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Heading = forwardRef(function Heading2(props, ref) {\n  const styles = useStyleConfig(\"Heading\", props);\n  const { className, ...rest } = omitThemingProps(props);\n  return /* @__PURE__ */ jsx(\n    chakra.h2,\n    {\n      ref,\n      className: cx(\"chakra-heading\", props.className),\n      ...rest,\n      __css: styles\n    }\n  );\n});\nHeading.displayName = \"Heading\";\n\nexport {\n  Heading\n};\n","import {\n  useCardStyles\n} from \"./chunk-4DHADF5X.mjs\";\n\n// src/card-footer.tsx\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  forwardRef,\n  chakra\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar CardFooter = forwardRef(\n  function CardFooter2(props, ref) {\n    const { className, justify, ...rest } = props;\n    const styles = useCardStyles();\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: cx(\"chakra-card__footer\", className),\n        __css: {\n          display: \"flex\",\n          justifyContent: justify,\n          ...styles.footer\n        },\n        ...rest\n      }\n    );\n  }\n);\n\nexport {\n  CardFooter\n};\n","import './ContactsList.css';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  Divider,\n  Heading,\n  Image,\n  Stack,\n  Text,\n} from '@chakra-ui/react';\nimport incognito from '../../../images/incognito.png';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContactsAPI } from 'redux/operations';\nimport { Link, useLocation } from 'react-router-dom';\n// import { resetContactInfo } from 'redux/contactsSlice';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const contacts = useSelector(selectContacts);\n  //* update contacts\n  useEffect(() => {\n    dispatch(fetchContactsAPI()); //* dispatch in hook dependency will update contacts-list.\n  }, [dispatch]);\n\n  const filter = useSelector(selectFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      <ul className=\"Contacts-list\">\n        {filteredContacts.map(({ id, name, number, surname, image }) => {\n          return (\n            <li key={id}>\n              <Card\n                direction={{ base: 'column', sm: 'row' }}\n                overflow=\"hidden\"\n                variant=\"outline\"\n              >\n                {image ? (\n                  <Image\n                    className={'Contact-avatar'}\n                    objectFit=\"cover\"\n                    w={'100px !important'}\n                    h={'100px !important'}\n                    borderRadius={50}\n                    maxW={{ base: '100%', sm: '200px' }}\n                    src={image}\n                    alt={`${id} avatar`}\n                  />\n                ) : (\n                  <Image\n                    className={'Contact-avatar'}\n                    src={incognito}\n                    alt={`${id} avatar`}\n                    objectFit=\"cover\"\n                    w={'100px !important'}\n                    h={'100px !important'}\n                    borderRadius={50}\n                    maxW={{ base: '100%', sm: '200px' }}\n                  />\n                )}\n                <Divider className=\"divider-vertical \" orientation=\"vertical\" />\n\n                <Stack>\n                  <CardBody>\n                    <Heading size=\"md\" style={{ textAlign: 'start' }}>\n                      {name} {surname} <br /> <span>({number})</span>\n                    </Heading>\n                    <Divider className=\"divider\" />\n                  </CardBody>\n\n                  <CardFooter>\n                    <Link to={`${id}`} state={{ from: location }}>\n                      <Button variant=\"solid\" colorScheme=\"blue\">\n                        Info\n                      </Button>\n                    </Link>\n                  </CardFooter>\n                </Stack>\n              </Card>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n"],"names":["ContactsList","require","Main","styled","createStylesContext","CardStylesProvider","useCardStyles","Card","forwardRef","props","ref","omitThemingProps","className","children","direction","justify","align","rest","styles","useMultiStyleConfig","jsx","chakra","cx","__css","display","flexDirection","justifyContent","alignItems","position","minWidth","wordWrap","container","value","StackItem","flex","displayName","Object","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","selector","Stack","isInline","directionProp","spacing","wrap","divider","shouldWrapChildren","useMemo","options","directionStyles","column","marginTop","marginEnd","marginBottom","marginStart","row","getStackStyles","dividerStyle","dividerStyles","my","mx","borderLeftWidth","borderBottomWidth","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","Children","filter","child","isValidElement","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","jsxs","Fragment","_className","flexWrap","CardBody","body","Heading","useStyleConfig","CardFooter","footer","dispatch","useDispatch","location","useLocation","contacts","useSelector","selectContacts","useEffect","fetchContactsAPI","selectFilter","filteredContacts","contact","name","toLowerCase","includes","id","number","surname","image","base","sm","overflow","variant","objectFit","w","h","borderRadius","maxW","src","alt","incognito","orientation","size","style","textAlign","to","state","from","colorScheme"],"sourceRoot":""}