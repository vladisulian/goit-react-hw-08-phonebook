{"version":3,"file":"static/js/844.cbc00404.chunk.js","mappings":"0YAYI,GAAoDA,EAAAA,EAAAA,GAAc,CACpEC,KAAM,2BACNC,aAAc,kHAFhB,eAAKC,EAAL,KAAgCC,EAAhC,KAII,GAA+CJ,EAAAA,EAAAA,GAAc,CAC/DK,QAAQ,EACRJ,KAAM,uBAFR,eAAKK,EAAL,KAA0BC,EAA1B,KAyGA,IAAIC,GAAcC,EAAAA,EAAAA,IAChB,SAAsBC,EAAOC,GAC3B,IAAMC,GAASC,EAAAA,EAAAA,IAAoB,OAAQH,GAE3C,EAzGJ,SAAgCA,GAC9B,IACMI,EAMFJ,EANFK,GACAC,EAKEN,EALFM,WACAC,EAIEP,EAJFO,UACAC,EAGER,EAHFQ,WACAC,EAEET,EAFFS,WACGC,GANL,OAOIV,EAPJ,GAQMW,GAAOC,EAAAA,EAAAA,SACPP,EAAKD,GAAU,SAAJ,OAAaO,GACxBE,EAAU,GAAH,OAAMR,EAAN,UACPS,EAAa,GAAH,OAAMT,EAAN,aACVU,EAAa,GAAH,OAAMV,EAAN,aAChB,GAA8CW,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAmBC,EAAAA,EAAAA,cACvB,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,QACCrB,GAAIU,GACDU,GAFL,IAGExB,KAAK0B,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELR,GAAe,EAChB,KAPH,GASA,CAACL,IAEGc,GAAgBL,EAAAA,EAAAA,cACpB,WAAsC,IAChCM,EAAIC,EADTN,EAAqC,uDAA5B,CAAC,EAAGC,EAAwB,uDAAT,KAE3B,yBACKD,GADL,IAEExB,IAAKyB,EACL,cAAcM,EAAAA,EAAAA,IAASX,GACvB,iBAAiBW,EAAAA,EAAAA,IAASxB,GAC1B,gBAAgBwB,EAAAA,EAAAA,IAASzB,GACzB,iBAAiByB,EAAAA,EAAAA,IAASvB,GAC1BJ,GAAwB,OAAnByB,EAAKL,EAAOpB,IAAcyB,EAAKjB,EACpCoB,QAAkC,OAAxBF,EAAKN,EAAOQ,SAAmBF,EAAK1B,GAEjD,GACD,CAACA,EAAIG,EAAYa,EAAWd,EAAWE,EAAYI,IAE/CqB,GAAuBV,EAAAA,EAAAA,cAC3B,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,QACCrB,GAAIS,GACDW,GAFL,IAGExB,KAAK0B,EAAAA,EAAAA,IAAUD,GAAc,SAACE,GACvBA,GAELV,GAAmB,EACpB,IACD,YAAa,UARf,GAUA,CAACJ,IAEGqB,GAAeX,EAAAA,EAAAA,cACnB,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,kBACID,GACAf,GAFL,IAGET,IAAKyB,EACLU,KAAM,SAJR,GAMA,CAAC1B,IAEG2B,GAA4Bb,EAAAA,EAAAA,cAChC,eAACC,EAAD,uDAAU,CAAC,EAAGC,EAAd,uDAA6B,KAA7B,eAAC,UACID,GADL,IAEExB,IAAKyB,EACLU,KAAM,eACN,eAAe,EACfE,SAAUb,EAAOa,UAAY,KAL/B,GAOA,IAEF,MAAO,CACLhC,aAAcA,EACdC,YAAaA,EACbE,aAAcA,EACdD,aAAcA,EACda,YAAaA,EACbkB,QAAS,kBAAMjB,GAAS,EAAf,EACTkB,OAAQ,kBAAMlB,GAAS,EAAf,EACRL,gBAAAA,EACAC,mBAAAA,EACAC,YAAAA,EACAC,eAAAA,EACAf,GAAAA,EACAQ,QAAAA,EACAC,WAAAA,EACAC,WAAAA,EACAL,UAAAA,EACAa,iBAAAA,EACAW,qBAAAA,EACAC,aAAAA,EACAN,cAAAA,EACAQ,0BAAAA,EAEH,CASOI,EALaC,EAAAA,EAAAA,IAAiB1C,IAEhCmC,EADF,EACEA,aAEGQ,GAHL,EAEEjC,WAFF,aAKMkC,GAAYC,EAAAA,EAAAA,IAAG,sBAAuB7C,EAAM4C,WAClD,OAAuBE,EAAAA,EAAAA,KAAIlD,EAAqB,CAAEmD,MAAOJ,EAASL,UAA0BQ,EAAAA,EAAAA,KAAIrD,EAA2B,CAAEsD,MAAO7C,EAAQoC,UAA0BQ,EAAAA,EAAAA,KACpKE,EAAAA,EAAAA,KADuK,QAAC,UAGnKb,EAAa,CAAC,EAAGlC,IAHiJ,IAIrK2C,UAAAA,EACAK,MAAO/C,EAAM,gBAGlB,IAEHJ,EAAYoD,YAAc,eACLnD,EAAAA,EAAAA,IACnB,SAAyBC,EAAOC,GAC9B,IAAMkD,EAAQtD,IACRK,EAASR,IACTkD,GAAYC,EAAAA,EAAAA,IAAG,2BAA4B7C,EAAM4C,WACvD,OAAuBE,EAAAA,EAAAA,KACrBE,EAAAA,EAAAA,KADwB,QAAC,UAGX,MAATG,OAAgB,EAASA,EAAM5B,iBAAiBvB,EAAOC,IAHpC,IAItBgD,MAAO/C,EAAOkD,WACdR,UAAAA,IAGL,IAEYM,YAAc,iB,uEC/IzBG,GAAYtD,EAAAA,EAAAA,IAAW,SAAoBuD,EAAarD,GAC1D,IAAI6B,EACE5B,GAASqD,EAAAA,EAAAA,IAAe,YAAaD,GACrCtD,GAAQ0C,EAAAA,EAAAA,IAAiBY,GAG7BhB,GAIEtC,EALF4C,UAKE5C,EAJFsC,UAFF,EAMItC,EAHFwD,kBAAAA,OAHF,OAGsCV,EAAAA,EAAAA,KAAIW,EAAmB,CAAC,GAH9D,IAMIzD,EAFF0D,kBAAAA,OAJF,MAIsB,KAJtB,EAKKC,GALL,OAMI3D,EANJ,GAOMmD,EAAQtD,IACR+D,EAA6E,OAAjE9B,EAAc,MAATqB,OAAgB,EAASA,EAAMtB,cAAc8B,EAAM1D,IAAgB6B,GAAzE,QAAgF7B,IAAAA,GAAQ0D,GACzG,OAAuBE,EAAAA,EAAAA,MACrBb,EAAAA,EAAAA,OADyB,QAAC,UAGrBY,GAHoB,IAIvBhB,WAAWC,EAAAA,EAAAA,IAAG,qBAAsB7C,EAAM4C,WAC1CK,OAAO,QACLa,QAAS,QACTC,UAAW,SACR7D,GAELoC,SAAU,CACRA,GACU,MAATa,OAAgB,EAASA,EAAM7C,YAAckD,EAAoBE,KAIzE,IACDL,EAAUH,YAAc,YACxB,IAAIO,GAAoB1D,EAAAA,EAAAA,IACtB,SAA4BC,EAAOC,GACjC,IAAMkD,EAAQtD,IACRK,EAASR,IACf,KAAe,MAATyD,OAAgB,EAASA,EAAM7C,YACnC,OAAO,KACT,IAAMsC,GAAYC,EAAAA,EAAAA,IAAG,kCAAmC7C,EAAM4C,WAC9D,OAAuBE,EAAAA,EAAAA,KACrBE,EAAAA,EAAAA,MADwB,QAAC,UAGX,MAATG,OAAgB,EAASA,EAAMd,0BAA0BrC,EAAOC,IAH7C,IAItBgD,MAAO/C,EAAOsD,kBACdZ,UAAAA,IAGL,IAEHa,EAAkBP,YAAc,oB,2KCxDhC,SAASc,EAAehE,GACtB,MAWF,SAA6BA,GAC3B,IAAI8B,EAAIC,EAAIkC,EACNd,EAAQtD,IAEZQ,EAWEL,EAXFK,GACA6D,EAUElE,EAVFkE,SACAC,EASEnE,EATFmE,SACAC,EAQEpE,EARFoE,SACA9D,EAOEN,EAPFM,WACAC,EAMEP,EANFO,UACAE,EAKET,EALFS,WACAD,EAIER,EAJFQ,WACA+B,EAGEvC,EAHFuC,QACAC,EAEExC,EAFFwC,OACGmB,GAXL,OAYI3D,EAZJ,GAaMqE,EAAWrE,EAAM,oBAAsB,CAACA,EAAM,qBAAuB,IAC7D,MAATmD,OAAgB,EAASA,EAAMlC,mBAA8B,MAATkC,OAAgB,EAASA,EAAM5C,YACtF8D,EAASC,KAAKnB,EAAMrC,aAET,MAATqC,OAAgB,EAASA,EAAMhC,cACjCkD,EAASC,KAAKnB,EAAMpC,YAEtB,yBACK4C,GADL,IAEE,mBAAoBU,EAASE,KAAK,WAAQ,EAC1ClE,GAAU,MAANA,EAAaA,EAAc,MAAT8C,OAAgB,EAASA,EAAM9C,GACrDG,WAA+D,OAAlDsB,EAAiB,MAAZoC,EAAmBA,EAAW1D,GAAsBsB,EAAc,MAATqB,OAAgB,EAASA,EAAM3C,WAC1GC,WAA+D,OAAlDsB,EAAiB,MAAZoC,EAAmBA,EAAW1D,GAAsBsB,EAAc,MAAToB,OAAgB,EAASA,EAAM1C,WAC1GH,WAA+D,OAAlD2D,EAAiB,MAAZG,EAAmBA,EAAW9D,GAAsB2D,EAAc,MAATd,OAAgB,EAASA,EAAM7C,WAC1GC,UAAwB,MAAbA,EAAoBA,EAAqB,MAAT4C,OAAgB,EAASA,EAAM5C,UAC1EgC,SAASiC,EAAAA,EAAAA,IAAyB,MAATrB,OAAgB,EAASA,EAAMZ,QAASA,GACjEC,QAAQgC,EAAAA,EAAAA,IAAyB,MAATrB,OAAgB,EAASA,EAAMX,OAAQA,IAElE,CA7CoEiC,CAAoBzE,GAA/EQ,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,UAAWE,EAA/B,EAA+BA,WAAYH,EAA3C,EAA2CA,WAAeqD,GAA1D,YACA,yBACKA,GADL,IAEEO,SAAU1D,EACV2D,SAAU1D,EACV2D,SAAU9D,EACV,gBAAgBoE,EAAAA,EAAAA,IAASnE,GACzB,iBAAiBmE,EAAAA,EAAAA,IAASpE,GAC1B,iBAAiBoE,EAAAA,EAAAA,IAASjE,IAE7B,C,mBCPGkE,GAAQ5E,EAAAA,EAAAA,IAAW,SAAgBC,EAAOC,GAC5C,IAAQ2E,EAAsB5E,EAAtB4E,SAAajB,GAArB,OAA8B3D,EAA9B,GACME,GAASC,EAAAA,EAAAA,IAAoB,QAASwD,GAEtCkB,EAAQb,GADGtB,EAAAA,EAAAA,IAAiBiB,IAE5BmB,GAAajC,EAAAA,EAAAA,IAAG,eAAgB7C,EAAM4C,WAC5C,OAAuBE,EAAAA,EAAAA,KACrBE,EAAAA,EAAAA,OADwB,QAAC,QAGvB+B,KAAMH,GACHC,GAJmB,IAKtB5B,MAAO/C,EAAOiD,MACdlD,IAAAA,EACA2C,UAAWkC,IAGhB,IACDH,EAAMzB,YAAc,QACpByB,EAAMtE,GAAK,Q,cCcX,EAvCiB,WAKf,OACE,kBAAM2E,aAAa,MAAMC,SALN,SAAAC,GACnBA,EAAMC,iBACNC,QAAQC,IAAI,mCACb,EAEkDhF,GAAI,WAArD,WACE,qEACA,UAACP,EAAD,CAAa8C,UAAU,eAAetC,YAAU,EAAhD,WACE,SAAC+C,EAAD,CAAWpB,QAAS,WAApB,uBACA,SAAC0C,EAAD,CACEpF,KAAM,WACN+F,YAAY,iBACZC,QAAQ,yHACRC,MAAM,+IAIV,UAAC1F,EAAD,CAAa8C,UAAU,eAAe6C,GAAI,EAAGnF,YAAU,EAAvD,WACE,SAAC+C,EAAD,CAAWpB,QAAS,QAApB,oBACA,SAAC0C,EAAD,CAAOpF,KAAM,QAAS+F,YAAY,yBAGpC,UAACxF,EAAD,CAAa8C,UAAU,eAAe6C,GAAI,EAAGnF,YAAU,EAAvD,WACE,SAAC+C,EAAD,CAAWpB,QAAS,WAApB,uBACA,SAAC0C,EAAD,CACEpF,KAAM,WACN+F,YAAY,YACZI,KAAM,iBAIV,SAAC,IAAD,CAAQC,YAAY,OAAOC,GAAI,EAAGC,EAAG,IAAKH,KAAK,SAA/C,oBAKL,C","sources":["../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-3HLJVDJ7.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs","Pages/Registration/Registration.jsx"],"sourcesContent":["// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n","import './Registration.scss';\nimport { Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nconst Register = () => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log('Registration POST method sended.');\n  };\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit} id={'reg-form'}>\n      <h1>Your contacts are always in your hands!</h1>\n      <FormControl className='form-control' isRequired>\n        <FormLabel htmlFor={'nickname'}>Nickname</FormLabel>\n        <Input\n          name={'nickname'}\n          placeholder=\"programmer2301\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </FormControl>\n\n      <FormControl className='form-control' mt={4} isRequired>\n        <FormLabel htmlFor={'email'}>Email</FormLabel>\n        <Input name={'email'} placeholder=\"example@mail.com\" />\n      </FormControl>\n\n      <FormControl className='form-control' mt={4} isRequired>\n        <FormLabel htmlFor={'password'}>Password</FormLabel>\n        <Input\n          name={'password'}\n          placeholder=\"*********\"\n          type={'password'}\n        />\n      </FormControl>\n\n      <Button colorScheme=\"blue\" mr={3} w={150} type=\"submit\">\n        Save\n      </Button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"names":["createContext","name","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","_a","_b","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","className","cx","jsx","value","chakra","__css","displayName","field","helperText","FormLabel","passedProps","useStyleConfig","requiredIndicator","RequiredIndicator","optionalIndicator","rest","ownProps","jsxs","display","textAlign","useFormControl","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size","autoComplete","onSubmit","event","preventDefault","console","log","placeholder","pattern","title","mt","type","colorScheme","mr","w"],"sourceRoot":""}