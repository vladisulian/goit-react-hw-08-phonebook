{"version":3,"file":"static/js/197.f365abcf.chunk.js","mappings":"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","sources":["Pages/Contacts/AddContact/AddContact.jsx","Pages/Contacts/Contacts.jsx","Pages/Contacts/ContactsList/ContactsList.jsx","Pages/Contacts/Filter/Filter.jsx","Pages/Contacts/Form/Form.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport './AddContact.css';\nconst {\n  Button,\n  useDisclosure,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  FormControl,\n  FormLabel,\n  Input,\n  ModalFooter,\n} = require('@chakra-ui/react');\nconst { useRef } = require('react');\n\nconst AddContactContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  color: black;\n`;\n\nexport const AddContact = () => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const initialRef = useRef(null);\n  const finalRef = useRef(null);\n\n  return (\n    <AddContactContainer>\n      <Button onClick={onOpen}>Open Modal</Button>\n\n      <Modal\n        initialFocusRef={initialRef}\n        finalFocusRef={finalRef}\n        isOpen={isOpen}\n        onClose={onClose}\n        style={{ background: 'black !important', borderRadius: '20px' }}\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Add to contacts</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            <FormControl>\n              <FormLabel>First name</FormLabel>\n              <Input ref={initialRef} placeholder=\"First name\" />\n            </FormControl>\n\n            <FormControl mt={4}>\n              <FormLabel>Second name</FormLabel>\n              <Input ref={initialRef} placeholder=\"Second name\" />\n            </FormControl>\n\n            <FormControl mt={4}>\n              <FormLabel>Last name</FormLabel>\n              <Input placeholder=\"Last name\" />\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent={'center'}>\n            <Button colorScheme=\"blue\" mr={3} w={150}>\n              Save\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </AddContactContainer>\n  );\n};\n","import styled from 'styled-components';\nimport { VisuallyHidden, VisuallyHiddenInput } from '@chakra-ui/react';\nimport { AddContact } from './AddContact/AddContact';\nconst { ContactsList } = require('./ContactsList/ContactsList');\nconst { FilterBar } = require('./Filter/Filter');\nconst { Form } = require('./Form/Form');\n\nconst Main = styled.main`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n\nposition: relative\n}`;\nconst Contacts = () => {\n  return (\n    <Main className=\"contacts-hero\">\n      <Form />\n      <AddContact />\n      {/* <VisuallyHidden> */}\n      <FilterBar />\n      <ContactsList />\n      {/* </VisuallyHidden> */}\n    </Main>\n  );\n};\n\nexport default Contacts;\n\n{\n  /* <div className=\"Phonebook-container\">\n        <h1 className=\"Phonebook__title\">Phonebook</h1>\n        <Form />\n        <FilterBar />\n        <ContactsList />\n        )}\n      </div> */\n}\n","import './ContactsList.css';\nimport PropTypes from 'prop-types';\n//? redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { deleteContactAPI, fetchContactsAPI } from 'redux/operations';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  // update contacts\n  useEffect(() => {\n    dispatch(fetchContactsAPI());\n    // dispatch in hook dependency will update contacts-list\n  }, [dispatch]);\n\n  const handleDelete = id => dispatch(deleteContactAPI(id));\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div className=\"Contacts-list-container\">\n      <h1>Contacts</h1>\n\n      <ul className=\"Contacts-list\">\n        {filteredContacts.map(({ name, id, phone }) => {\n          return (\n            <li key={id}>\n              <div className=\"contacts__name\">\n                <p>{name}</p>\n              </div>\n              <div className=\"contacts__number\">\n                <p>{phone}</p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"Contacts__delete-button\"\n                onClick={() => {\n                  handleDelete(id);\n                }}\n              >\n                Delete contact\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport './Filter.css';\n//? redux\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const FilterBar = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <h3>Find your contacts by name</h3>\n      <div className=\"filter-container\">\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className=\"filter__input\"\n          onChange={handleChangeFilter}\n        />\n      </div>\n    </>\n  );\n};\n\nFilterBar.propTypes = {\n  handleChange: PropTypes.func,\n};\n","import { Button } from '@chakra-ui/react';\nimport './Form.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactAPI } from 'redux/operations';\nimport { getLoadingStatus } from 'redux/selectors';\n\nexport const Form = () => {\n  const isLoading = useSelector(getLoadingStatus);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const handleChange = e => {\n    const stateName = e.currentTarget.name;\n    const stateValue = e.currentTarget.value;\n\n    switch (stateName) {\n      case 'name':\n        setName(stateValue);\n        break;\n\n      case 'phone':\n        setNumber(stateValue);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const name = form.elements.name.value;\n    const phone = form.elements.phone.value;\n    const contact = { name, phone };\n\n    dispatch(addContactAPI(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <form\n        autoComplete=\"off\"\n        className=\"Phonebook__form\"\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"name\">\n          Name <br />\n          <input\n            type=\"text\"\n            name=\"name\"\n            className=\"Phonebook__form-input\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"phone\">\n          Number <br />\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            className=\"Phonebook__form-input\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={phone}\n            onChange={handleChange}\n          />\n        </label>\n        {!isLoading ? (\n          <Button\n            width={250}\n            borderRadius={20}\n            colorScheme=\"teal\"\n            variant=\"outline\"\n            type=\"submit\"\n          >\n            Submit\n          </Button>\n        ) : (\n          <Button\n            width={250}\n            borderRadius={20}\n            isLoading\n            loadingText=\"Sending\"\n            colorScheme=\"teal\"\n            variant=\"outline\"\n            spinnerPlacement=\"start\"\n          ></Button>\n        )}\n\n        {/* <button type=\"submit\" className=\"Phonebook__form-submit-button\">\n          Add contact\n        </button> */}\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n"],"names":["require","Button","useDisclosure","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","FormControl","FormLabel","Input","ModalFooter","useRef","AddContactContainer","styled","AddContact","isOpen","onOpen","onClose","initialRef","finalRef","onClick","initialFocusRef","finalFocusRef","style","background","borderRadius","pb","ref","placeholder","mt","justifyContent","colorScheme","mr","w","ContactsList","FilterBar","Form","Main","className","dispatch","useDispatch","contacts","useSelector","getContacts","useEffect","fetchContactsAPI","filter","getFilter","filteredContacts","contact","name","toLowerCase","includes","map","id","phone","type","deleteContactAPI","handleDelete","onChange","e","setFilter","target","value","isLoading","getLoadingStatus","useState","setName","setNumber","handleChange","stateName","currentTarget","stateValue","reset","autoComplete","onSubmit","preventDefault","form","elements","addContactAPI","htmlFor","pattern","title","required","width","loadingText","variant","spinnerPlacement"],"sourceRoot":""}